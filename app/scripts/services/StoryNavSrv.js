(function(){
  function StoryNavSrv() {
    var StoryNavSrv = {};

    var Page = function(args){
      this.parentPage = args.parentPage;
      this.id = args.id;
      this.content = args.content;
            
      this.init = function(args){
        this.title = args.title;
        this.summary = args.summary;
        this.content = args.content;
        this.choices = args.choices; //Displayed to user
        this.endpoint = args.endpoint;
        
        return this;
      }
      
      this.createChildPages = function(){
        if(this.choices){
          for(var i = 0; i < this.choices.length; i++){
            var newPageID = getBranchID(this, i);
            var newPage = new Page({
              parentPage: this,
              id: newPageID,
              content: '[[Autogenerated page ' + newPageID + ']]'
            });
            
            StoryNavSrv.currentStory.pages.push(newPage);
            
            this.choices[i].dest = newPageID;
          }
        }
      }
      
      this.init(args);
    };
    
    var getBranchID = function(parent, index){
      var pages = StoryNavSrv.currentStory.pages;
      var lastChar = parent.id[parent.id.length -1];

      var reg = /^\d+$/;

      if(reg.test(lastChar)){
        return parent.id + indexToAlpha(index);
      }else{
        return parent.id + (index+1);
      }
    }

    var indexToAlpha = function(index){
      return String.fromCharCode(index + 65);
    }
    
    var initializePages = function(){
      for (var i = 0; i < StoryNavSrv.currentStory.pages.length; i++){
        StoryNavSrv.currentStory.pages[i].createChildPages();
      }
    }
    
    var getPageFromID = function(id){
      var pages = StoryNavSrv.currentStory.pages;
      
      for(var i in pages){
        if(pages[i].id === id){
          return pages[i];
        }
      }
    
      return undefined;
    };
    
//    TEST FUNCTIONS/DATA ****************************************
    var seedTestDataBase = function(){
      var testStory = {
        title: 'TestStory Title',
        description: 'Test of story nav system.',
        summary: 'First story to test story nav system',
        keywords: ['test'],
        system: 'default',
        rating: 'unrated', //TODO set this as default in Rails
        pages: []
      };

      StoryNavSrv.currentStory = testStory;

      StoryNavSrv.currentStory.pages.push(
        new Page(
          {
            parentPage: null,
            title: 'Initial page', 
            summary: 'First page', 
            content: 'You see two doors. Which do you choose?', 
            id: '1',
            choices: [
              {text: 'Left door'},
              {text: 'Right door'}
            ],
            endpoint: false 
          }
        )
      );

      StoryNavSrv.currentPage = StoryNavSrv.currentStory.pages[0];
      StoryNavSrv.currentStory.pages[0].createChildPages();
      
      StoryNavSrv.editPage = function(id, args){
        var page = getPageFromID(id);
        
        if(page){
          page
            .init(args)
            .createChildPages();
        }else{
          console.warn('Attempt to edit with invalid page id "' + id + '" SKIPPING');
        }
      }
      
      StoryNavSrv
        .editPage('1A',
           {
            title: 'Left door', 
            summary: 'First page', 
            content: 'You entered the LEFT door.', 
            endpoint: true 
          });
      StoryNavSrv
        .editPage('1B',
           {
            title: 'Left door', 
            summary: 'First page', 
            content: 'You entered the RIGHT door.', 
            choices: [
              {text: 'Or did I?'},
              {text: 'No I didn\'t'},
            ],
            endpoint: true 
          });
      StoryNavSrv
        .editPage('1B1',
           {
            title: 'Left door', 
            summary: 'First page', 
            content: 'You totally did, liar!', 
            endpoint: true 
          });
      StoryNavSrv
        .editPage('1B2',
           {
            title: 'Left door', 
            summary: 'First page', 
            content: 'Stop contradicting!', 
            endpoint: true 
          });
    };
    
    //Initializer ***************************8
    StoryNavSrv.initializeStoryData = function(){
      //NOTE: For FE testing only
      seedTestDataBase();
    };

    return StoryNavSrv;
  }
  
  angular
    .module('fatebook')
    .factory('StoryNavSrv', [StoryNavSrv])
})();